name: CI

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  build:
    runs-on: jedi-self-hosted-rg
    steps:
      - name: checkout current
        uses: actions/checkout@v3
        with:
          path: ci/opsinputs

      - name: checkout jedicmake
        uses: actions/checkout@v3
        with:
          path: ci/jedicmake
          repository: JCSDA-internal/jedi-cmake
          submodules: true
          token: ${{ secrets.GH_PAT }}

      - name: checkout oops
        uses: actions/checkout@v3
        with:
          path: ci/oops
          repository: JCSDA-internal/oops
          token: ${{ secrets.GH_PAT }}
      - name: matching branch checkout attempt oops ${{ github.head_ref }}
        if: github.event_name == 'pull_request'
        run: ./ci/get-ref-branch ./ci/oops

      - name: checkout ioda
        uses: actions/checkout@v3
        with:
          path: ci/ioda
          repository: JCSDA-internal/ioda
          token: ${{ secrets.GH_PAT }}
      - name: matching branch checkout attempt ioda ${{ github.head_ref }}
        if: github.event_name == 'pull_request'
        run: ./ci/get-ref-branch ./ci/ioda

      - name: checkout ufo
        uses: actions/checkout@v3
        with:
          path: ci/ufo
          repository: JCSDA-internal/ufo
          token: ${{ secrets.GH_PAT }}
      - name: matching branch checkout attempt ufo ${{ github.head_ref }}
        if: github.event_name == 'pull_request'
        run: ./ci/get-ref-branch ./ci/ufo

      # - name: checkout opsinputs
      #   uses: actions/checkout@v3
      #   with:
      #     path: ci/opsinputs
      #     repository: MetOffice/opsinputs
      # - name: matching branch checkout attempt opsinputs ${{ github.head_ref }}
      #   if: github.event_name == 'pull_request'
      #   run: ./ci/get-ref-branch ./ci/opsinputs

      - name: build and test
        run: |
          az acr login --name ngmssboxjediacr
          docker run --rm \
            --entrypoint=/usr/local/src/opsinputs/ci/build-and-test \
            --workdir=/usr/local/src/opsinputs/ci \
            --volume $PWD:/usr/local/src/opsinputs \
            'ngmssboxjediacr.azurecr.io/jedibase:alma9'

        # run: |
        #   docker run --rm \
        #     --entrypoint=/usr/local/src/opsinputs/ci/opsinputs-ci-build \
        #     --workdir=/usr/local/src/opsinputs/ci \
        #     --volume $PWD:/usr/local/src/opsinputs \
        #     'jcsda/docker-gnu-openmpi-dev:latest'
