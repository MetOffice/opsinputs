window_begin: 2018-01-01T00:00:00Z
window_end: 2018-01-01T01:00:00Z

Observations:
  ObsTypes:
  - ObsSpace:
      name: GPSRO
      ObsDataIn:
        obsfile: Data/071_VarField_bendingangle.nc4
      simulate:
        variables: [bending_angle]
        channels: 1, 3
    ObsFilters:
    # Double all observation errors: we want to check if error changes made by filters are
    # propagated to VarObs files
    - Filter: BlackList
      variables: bending_angle
      action:
        name: inflate error
        inflation factor: 2.0
    # Set the flag of observations with missing values to "pass": we want to check if these
    # values are encoded correctly in the VarObsFile.
    - Filter: Reset Flags to Pass
      flags_to_reset: [1, 6]  # missing, Hfailed
    - Filter: Domain Check
      where:
      - variable:
          name: latitude@MetaData
        minvalue: 0.
    - Filter: VarObs Writer
      reject_obs_with_any_variable_failing_qc: true
    - Filter: VarObs Checker
      expected_header_fields:
        Vertical coordinate type: 1
      expected_main_table_columns:
        # Only observations 1, 2 and 4 are passed; observation 3 is rejected by the domain check.
        # Only levels 1 and 3 are simulated and hence written to the VarObs file.
        # In the arrays below, rows denote locations and columns levels.
        field:    ["71", "71",
                   "71", "71",
                   "71", "71"]
        level:    ["1", "2",
                   "1", "2",
                   "1", "2"]
        ob value: ["1.10000", "3.10000",
                   "-1073741824.00000", "3.20000",
                   "1.40000", "3.40000"]
        ob error: ["0.20000", "4.20000",
                   "-1073741824.00000", "4.40000",
                   "0.80000", "4.80000"]
        lat:      ["21.00000", "21.00000",
                   "22.00000", "22.00000",
                   "24.00000", "24.00000"]
        lon:      ["31.00000", "31.00000",
                   "32.00000", "32.00000",
                   "34.00000", "34.00000"]
        time:     ["-3540.00000", "-3540.00000",
                   "-3480.00000", "-3480.00000",
                   "-3360.00000", "-3360.00000"]
    HofX: ObsValue # just a placeholder -- not used, but needed to force calls to postFilter.
    benchmarkFlag: 1000 # just to keep the ObsFilters test happy
    flaggedBenchmark: 0
