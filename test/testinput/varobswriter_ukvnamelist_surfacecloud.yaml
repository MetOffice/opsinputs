time window:
  begin: 2018-01-01T00:00:00Z
  end: 2018-01-01T02:00:00Z

observations:
  - obs space:
      name: SurfaceCloud
      obsdatain:
        engine:
          type: H5File
          obsfile: Data/varobs_ukvnamelist_surfacecloud.nc4
      simulated variables: [cloud_layer, cloudAmount]
      observed variables: []
      derived variables: [cloud_layer, cloudAmount]
      channels: 1-3
    obs filters:
    # Set the flag of observations with missing values to "pass": we want to check if these
    # values are encoded correctly in the VarObsFile.
    - filter: Reset Flags to Pass
      flags_to_reset: [10]  # missing
    # Blacklist all missing entries in the original profiles (i.e. observation 2)
    # This must be run after the Reset Flags to Pass filter,
    # which sets the flags of any missing values in the original profiles
    # to 'pass'. Therefore this filter is run with the 'defer to post' option set to true.
    - filter: BlackList
      where:
      - variable:
          name: MetaData/latitude
        value: is_not_valid
      defer to post: true
    - filter: VarObs Writer
      namelist_directory: ../etc/ukv/varobs
      general_mode: debug
      IC_PLevels: 3
      reject_obs_with_all_variables_failing_qc: true
    - filter: VarObs Checker
      expected_main_table_columns:
        # Rows are locations, columns are filter variables
        # The blacklist prevents the missing ob from being written out
        field: [15,15,15,
                15,15,15,
                15,15,15]
        ob value: ["11.30000","11.20000","11.10000",
                   "13.30000","13.20000","13.10000",
                   "14.30000","14.20000","14.10000"]
        lat: ["7.10000","7.10000","7.10000",
              "7.30000","7.30000","7.30000",
              "7.40000","7.40000","7.40000"]
        lon: ["17.10000","17.10000","17.10000",
              "17.30000","17.30000","17.30000",
              "17.40000","17.40000","17.40000"]
    HofX: ObsValue # just a placeholder -- not used, but needed to force calls to postFilter.
    benchmarkFlag: 1000 # just to keep the ObsFilters test happy
    flaggedBenchmark: 0
