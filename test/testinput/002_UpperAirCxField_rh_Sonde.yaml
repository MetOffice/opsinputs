window begin: 2018-01-01T00:00:00Z
window end: 2018-01-01T01:00:00Z

observations:
  - obs space:
      name: Sonde
      obsdatain:
        obsfile: Data/relative_humidity_Sonde.nc4
        obsgrouping:
          group variables: [ "station_id" ]
          sort variable: "air_pressure"
          sort order: "descending"
      simulated variables: [relative_humidity]
      extension:
        average profiles onto model levels: 3
    geovals:
      filename: Data/002_UpperAirCxField_rh_Sonde.nc4
    obs filters:
    # Set the flag of observations with missing values to "pass": we want to check if these
    # values are encoded correctly in the Cx file.
    - filter: Reset Flags to Pass
      flags_to_reset: [10, 15]  # missing, Hfailed
    # Reject observation 3: we want to check if it is omitted from the Cx file, as expected.
    - filter: Domain Check
      where:
      - variable:
          name: latitude@MetaData
        minvalue: 0.0
    - filter: Cx Writer
      # TODO: don't need this
      #where:
      #- variable:
      #    name: extended_obs_space@MetaData
      #  is_in: 0
      namelist_directory: testinput/CxWriterNamelists_002_UpperAirCxField_rh
      reject_obs_with_any_variable_failing_qc: true
      general_mode: debug
      IC_PLevels: 5
    - filter: Cx Checker
      expected_surface_variables: []
      expected_upper_air_variables: ["2"] # IndexCxrh
      expected_main_table_columns:
      - # batch 1
        - ["1.25", "1.35", "1.45"]       # column 1
        - ["1.55", "1.65", "1.75"]       # column 2
    HofX: HofX
    benchmarkFlag: 1000 # just to keep the ObsFilters test happy
    flaggedBenchmark: 0
