window begin: 2018-01-01T00:00:00Z
window end: 2018-01-01T02:00:00Z

observations:
# This ob space shows what happens if the following are left as defaults
# reject_obs_with_all_variables_failing_qc: false
# reject_obs_with_any_variables_failing_qc: false
# This means that despite the blacklist the entries still end up in the varobs file
  - obs space:
      name: ABIClr
      obsdatain:
        engine:
          type: H5File
          obsfile: Data/varobs_globalnamelist_abiclr.nc4
      simulated variables: [brightnessTemperature]
      channels: 1, 3
    obs filters:
    # Set the flag of observations with missing values to "pass": we want to check if these
    # values are encoded correctly in the VarObsFile.
    - filter: Reset Flags to Pass
      flags_to_reset: [10, 15]  # missing, Hfailed
    # Reject observation 3: the blacklist doesn't stop the ob getting into the varobs because of the above "bad" settings
    - filter: BlackList
      where:
      - variable:
          name: MetaData/latitude
        is_not_defined:
    - filter: VarObs Writer
      namelist_directory: ../etc/global/varobs
      general_mode: debug
    - filter: VarObs Checker
      expected_main_table_columns:
        # Only channels 1 and 3 are simulated and hence written to the VarObs file.
        # In the arrays below, rows denote locations and columns are the varobs channels are consecutive.
        field:    ["10","10","11","18","19","21","28","31","34","54","55","55","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80",
                   "10","10","11","18","19","21","28","31","34","54","55","55","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80",
                   "10","10","11","18","19","21","28","31","34","54","55","55","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80",
                   "10","10","11","18","19","21","28","31","34","54","55","55","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80"]
        level:    ["1","2","1","1","1","1","1","1","1","1","1","2",
                   "1","2","1","1","1","1","1","1","1","1","1","2",
                   "1","2","1","1","1","1","1","1","1","1","1","2",
                   "1","2","1","1","1","1","1","1","1","1","1","2"]
        ob value: ["21.10000","21.30000","27.10000","67.10000","37.10000","3.00000","13.00000","47.10000","57.10000","2.00000","1.00000","2.00000",
                   "22.10000","22.30000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-32768.00000","-32768.00000","-1073741824.00000","-1073741824.00000","0.00000","0.00000","0.00000",
                   "23.10000","23.30000","27.30000","67.30000","37.30000","7.00000","17.00000","47.30000","57.30000","2.00000","1.00000","2.00000",
                   "24.10000","24.30000","27.40000","67.40000","37.40000","9.00000","19.00000","47.40000","57.40000","2.00000","1.00000","2.00000"]
        lat:      ["7.10000","7.10000","7.10000","7.10000","7.10000","7.10000","7.10000","7.10000","7.10000","7.10000","7.10000","7.10000",
                   "-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000",
                   "7.30000","7.30000","7.30000","7.30000","7.30000","7.30000","7.30000","7.30000","7.30000","7.30000","7.30000","7.30000",
                   "7.40000","7.40000","7.40000","7.40000","7.40000","7.40000","7.40000","7.40000","7.40000","7.40000","7.40000","7.40000"]
        lon:      ["17.10000","17.10000","17.10000","17.10000","17.10000","17.10000","17.10000","17.10000","17.10000","17.10000","17.10000","17.10000",
                   "-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000",
                   "17.30000","17.30000","17.30000","17.30000","17.30000","17.30000","17.30000","17.30000","17.30000","17.30000","17.30000","17.30000",
                   "17.40000","17.40000","17.40000","17.40000","17.40000","17.40000","17.40000","17.40000","17.40000","17.40000","17.40000","17.40000"]
    HofX: ObsValue # just a placeholder -- not used, but needed to force calls to postFilter.
    benchmarkFlag: 1000 # just to keep the ObsFilters test happy
    flaggedBenchmark: 0
# This ob space shows what the atms behaviour should be
# reject_obs_with_all_variables_failing_qc: true
# reject_obs_with_any_variables_failing_qc: false
  - obs space:
      name: ABIClr
      obsdatain:
        engine:
          type: H5File
          obsfile: Data/varobs_globalnamelist_abiclr.nc4
      simulated variables: [brightnessTemperature]
      channels: 1, 3
    obs filters:
    # Set the flag of observations with missing values to "pass": we want to check if these
    # values are encoded correctly in the VarObsFile.
    - filter: Reset Flags to Pass
      flags_to_reset: [10, 15]  # missing, Hfailed
    # Reject observation 2: we want to check if it is omitted from the VarObs file, as expected.
    - filter: BlackList
      where:
      - variable:
          name: MetaData/latitude
        is_not_defined:
    - filter: VarObs Writer
      namelist_directory: ../etc/global/varobs
      general_mode: debug
      reject_obs_with_all_variables_failing_qc: true
    - filter: VarObs Checker
      expected_main_table_columns:
        # Only channels 1 and 3 are simulated and hence written to the VarObs file.
        # In the arrays below, rows denote locations and columns are the varobs channels are consecutive.
        field:    ["10","10","11","18","19","21","28","31","34","54","55","55","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80",
                   "10","10","11","18","19","21","28","31","34","54","55","55","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80",
                   "10","10","11","18","19","21","28","31","34","54","55","55","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80","80"]
        level:    ["1","2","1","1","1","1","1","1","1","1","1","2",
                   "1","2","1","1","1","1","1","1","1","1","1","2",
                   "1","2","1","1","1","1","1","1","1","1","1","2"]
        ob value: ["21.10000","21.30000","27.10000","67.10000","37.10000","3.00000","13.00000","47.10000","57.10000","2.00000","1.00000","2.00000",
                   "23.10000","23.30000","27.30000","67.30000","37.30000","7.00000","17.00000","47.30000","57.30000","2.00000","1.00000","2.00000",
                   "24.10000","24.30000","27.40000","67.40000","37.40000","9.00000","19.00000","47.40000","57.40000","2.00000","1.00000","2.00000"]
        lat:      ["7.10000","7.10000","7.10000","7.10000","7.10000","7.10000","7.10000","7.10000","7.10000","7.10000","7.10000","7.10000",
                   "7.30000","7.30000","7.30000","7.30000","7.30000","7.30000","7.30000","7.30000","7.30000","7.30000","7.30000","7.30000",
                   "7.40000","7.40000","7.40000","7.40000","7.40000","7.40000","7.40000","7.40000","7.40000","7.40000","7.40000","7.40000"]
        lon:      ["17.10000","17.10000","17.10000","17.10000","17.10000","17.10000","17.10000","17.10000","17.10000","17.10000","17.10000","17.10000",
                   "17.30000","17.30000","17.30000","17.30000","17.30000","17.30000","17.30000","17.30000","17.30000","17.30000","17.30000","17.30000",
                   "17.40000","17.40000","17.40000","17.40000","17.40000","17.40000","17.40000","17.40000","17.40000","17.40000","17.40000","17.40000"]
    HofX: ObsValue # just a placeholder -- not used, but needed to force calls to postFilter.
    benchmarkFlag: 1000 # just to keep the ObsFilters test happy
    flaggedBenchmark: 0
