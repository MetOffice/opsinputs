window begin: 2018-01-01T00:00:00Z
window end: 2018-01-01T01:00:00Z

observations:
  - obs space:
      name: IASI
      obsdatain:
        obsfile: Data/varobs_globalnamelist_iasi.nc4
      observed variables: [radiance]
      simulated variables: [brightness_temperature]
      derived variables: [brightness_temperature]
      channels: &all_channels 1, 3
    geovals:
      filename: Data/cx_globalnamelist_iasi.nc4
    obs filters:
    # Set the flag of observations with missing values to "pass": we want to check if these
    # values are encoded correctly in the VarObsFile.
    - filter: Reset Flags to Pass
      flags_to_reset: [10, 15]  # missing, Hfailed
    ### Assign nominal error (ensure not missing values) ###
    - filter: Perform Action
      filter variables:
      - name: brightness_temperature
        channels: *all_channels
      action:
        name: assign error
        error parameter: 10.0
    - filter: BlackList
      filter variables:
      - name: brightness_temperature
        channels: *all_channels
      where:
      - variable:
          name: latitude@MetaData #ensures ob2 is failed
        is_not_defined:
    - filter: Cx Writer
      variables_for_quality_control:
      - name: brightness_temperature
        channels: *all_channels
      reject_obs_with_all_variables_failing_qc: true
      general_mode: debug
      IC_PLevels: 5
    - filter: Cx Checker
      expected_surface_variables: ["1","2","3","4","5","6","13","16","17"]
      expected_upper_air_variables: ["1","5","11","29","30"]
      expected_main_table_columns:
      - # batch 1 - 9 1dvalues first ; then 2d values in expected order
        # observation 3 is rejected by the tests above hence only 3 (1,2,4) columns
        - ["27.10","37.10","67.10","77.10","47.10","57.10","7.10","87.10","17.10","1.10","1.20","1.30","11.10","11.20","11.30","41.10","41.20","41.30","21.10","21.20","21.30","31.10","31.20","31.30"]  # column 1 - 1st observation
        - ["27.30","37.30","67.30","77.30","47.30","57.30","7.30","87.30","17.30","3.10","3.20","3.30","13.10","13.20","13.30","43.10","43.20","43.30","23.10","23.20","23.30","33.10","33.20","33.30"]  # column 3 - 3rd observation
        - ["27.40","37.40","67.40","77.40","47.40","57.40","7.40","87.40","17.40","4.10","4.20","4.30","14.10","14.20","14.30","44.10","44.20","44.30","24.10","24.20","24.30","34.10","34.20","34.30"] # column 4 - 4th observation
    HofX: ObsValue # just a placeholder -- not used, but needed to force calls to postFilter.
    benchmarkFlag: 1000 # just to keep the ObsFilters test happy
    flaggedBenchmark: 0
