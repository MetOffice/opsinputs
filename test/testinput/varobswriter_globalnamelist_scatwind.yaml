window begin: 2018-01-01T00:00:00Z
window end: 2018-01-01T02:00:00Z

observations:
# This ob space shows what happens if the following are left as defaults, with no blacklist applied
# reject_obs_with_all_variables_failing_qc: false
# reject_obs_with_any_variables_failing_qc: false
  - obs space:
      name: Scatwind
      obsdatain:
        obsfile: Data/varobs_globalnamelist_scatwind.nc4
      simulated variables: [eastward_wind, northward_wind, ambwind_probability]
      observed variables: [eastward_wind, northward_wind, ambwind_probability]
      channels: 1, 3
    obs filters:
    # Set the flag of observations with missing values to "pass": we want to check if these
    # values are encoded correctly in the VarObsFile.
    - filter: Reset Flags to Pass
      flags_to_reset: [10, 15]  # missing, Hfailed
    - filter: VarObs Writer
      namelist_directory: ../etc/global/varobs
      general_mode: debug
    - filter: VarObs Checker
      expected_main_table_columns:
        # Only channels 1 and 3 are simulated and hence written to the VarObs file.
        # In the arrays below, rows denote locations and columns are the varobs channels are consecutive.
        field:    ["51","51","52","52","53","53",
                   "51","51","52","52","53","53",
                   "51","51","52","52","53","53",
                   "51","51","52","52","53","53"]
        level:    ["1","2","1","2","1","2",
                   "1","2","1","2","1","2",
                   "1","2","1","2","1","2",
                   "1","2","1","2","1","2"]
        ob value: ["91.10000","91.30000","101.10000","101.30000","61.10000","61.30000",
                   "92.10000","92.30000","102.10000","102.30000","62.10000","62.30000",
                   "93.10000","93.30000","103.10000","103.30000","63.10000","63.30000",
                   "94.10000","94.30000","104.10000","104.30000","64.10000","64.30000"]
        ob error: ["11.10000","11.30000","41.10000","41.30000","71.10000","71.30000",
                   "12.10000","12.30000","42.10000","42.30000","72.10000","72.30000",
                   "13.10000","13.30000","43.10000","43.30000","73.10000","73.30000",
                   "14.10000","14.30000","44.10000","44.30000","74.10000","74.30000"]
        # Note that PGE values for field 52 (v10ambwind) are copied from field 51 (u10ambwind).
        # PGE are packed by multiplying by 100000. Need to view nc4 file in full precision as 
        # 21.3 is actually stored as 21.2999992
        pge:      ["211000.00000","212990.00000","211000.00000","212990.00000","811000.00000","813000.00000",
                   "221000.00000","222990.00000","221000.00000","222990.00000","821000.00000","823000.00000",
                   "231000.00000","232990.00000","231000.00000","232990.00000","831000.00000","833000.00000",
                   "241000.00000","242990.00000","241000.00000","242990.00000","841000.00000","843000.00000"]
        lat:      ["7.10000","7.10000","7.10000","7.10000","7.10000","7.10000",
                   "-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000",
                   "7.30000","7.30000","7.30000","7.30000","7.30000","7.30000",
                   "7.40000","7.40000","7.40000","7.40000","7.40000","7.40000"]
        lon:      ["17.10000","17.10000","17.10000","17.10000","17.10000","17.10000",
                   "-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000",
                   "17.30000","17.30000","17.30000","17.30000","17.30000","17.30000",
                   "17.40000","17.40000","17.40000","17.40000","17.40000","17.40000"]
    HofX: ObsValue # just a placeholder -- not used, but needed to force calls to postFilter.
    benchmarkFlag: 1000 # just to keep the ObsFilters test happy
    flaggedBenchmark: 0
# This ob space shows what happens if the following are left as defaults, with a blacklist applied
# reject_obs_with_all_variables_failing_qc: false
# reject_obs_with_any_variables_failing_qc: false
# This means that despite the blacklist the entries still end up in the varobs file
  - obs space:
      name: Scatwind
      obsdatain:
        obsfile: Data/varobs_globalnamelist_scatwind.nc4
      simulated variables: [eastward_wind, northward_wind, ambwind_probability]
      observed variables: [eastward_wind, northward_wind, ambwind_probability]
      channels: 1, 3
    obs filters:
    # Set the flag of observations with missing values to "pass": we want to check if these
    # values are encoded correctly in the VarObsFile.
    - filter: Reset Flags to Pass
      flags_to_reset: [10, 15]  # missing, Hfailed
    # Reject observation 2: the blacklist doesn't stop the ob getting into the varobs because of the above "bad" settings
    - filter: BlackList
      filter variables:
      - name: eastward_wind
        channels: 1, 3
      - name: northward_wind
        channels: 1, 3
      - name: ambwind_probability
        channels: 1, 3
      where:
      - variable:
          name: latitude@MetaData
        is_not_defined:
    - filter: VarObs Writer
      namelist_directory: ../etc/global/varobs
      general_mode: debug
    - filter: VarObs Checker
      expected_main_table_columns:
        # Only channels 1 and 3 are simulated and hence written to the VarObs file.
        # In the arrays below, rows denote locations and columns are the varobs channels are consecutive.
        field:    ["51","51","52","52","53","53",
                   "51","51","52","52","53","53",
                   "51","51","52","52","53","53",
                   "51","51","52","52","53","53"]
        level:    ["1","2","1","2","1","2",
                   "1","2","1","2","1","2",
                   "1","2","1","2","1","2",
                   "1","2","1","2","1","2"]
        ob value: ["91.10000","91.30000","101.10000","101.30000","61.10000","61.30000",
                   "92.10000","92.30000","102.10000","102.30000","62.10000","62.30000",
                   "93.10000","93.30000","103.10000","103.30000","63.10000","63.30000",
                   "94.10000","94.30000","104.10000","104.30000","64.10000","64.30000"]
        ob error: ["11.10000","11.30000","41.10000","41.30000","71.10000","71.30000",
                   "12.10000","12.30000","42.10000","42.30000","72.10000","72.30000",
                   "13.10000","13.30000","43.10000","43.30000","73.10000","73.30000",
                   "14.10000","14.30000","44.10000","44.30000","74.10000","74.30000"]
        # Note that PGE values for field 52 (v10ambwind) are copied from field 51 (u10ambwind).
        # PGE are packed by multiplying by 100000. Need to view nc4 file in full precision as 
        # 21.3 is actually stored as 21.2999992
        pge:      ["211000.00000","212990.00000","211000.00000","212990.00000","811000.00000","813000.00000",
                   "221000.00000","222990.00000","221000.00000","222990.00000","821000.00000","823000.00000",
                   "231000.00000","232990.00000","231000.00000","232990.00000","831000.00000","833000.00000",
                   "241000.00000","242990.00000","241000.00000","242990.00000","841000.00000","843000.00000"]
        lat:      ["7.10000","7.10000","7.10000","7.10000","7.10000","7.10000",
                   "-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000",
                   "7.30000","7.30000","7.30000","7.30000","7.30000","7.30000",
                   "7.40000","7.40000","7.40000","7.40000","7.40000","7.40000"]
        lon:      ["17.10000","17.10000","17.10000","17.10000","17.10000","17.10000",
                   "-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000","-1073741824.00000",
                   "17.30000","17.30000","17.30000","17.30000","17.30000","17.30000",
                   "17.40000","17.40000","17.40000","17.40000","17.40000","17.40000"]
    HofX: ObsValue # just a placeholder -- not used, but needed to force calls to postFilter.
    benchmarkFlag: 1000 # just to keep the ObsFilters test happy
    flaggedBenchmark: 0
# This ob space shows what the scatwind behaviour should be
# reject_obs_with_all_variables_failing_qc: true
# reject_obs_with_any_variables_failing_qc: false
  - obs space:
      name: Scatwind
      obsdatain:
        obsfile: Data/varobs_globalnamelist_scatwind.nc4
      simulated variables: [eastward_wind, northward_wind, ambwind_probability]
      observed variables: [eastward_wind, northward_wind, ambwind_probability]
      channels: 1, 3
    obs filters:
    # Set the flag of observations with missing values to "pass": we want to check if these
    # values are encoded correctly in the VarObsFile.
    - filter: Reset Flags to Pass
      flags_to_reset: [10, 15]  # missing, Hfailed
    # Reject observation 2: we want to check if it is omitted from the VarObs file, as expected.
    - filter: BlackList
      filter variables:
      - name: eastward_wind
        channels: 1, 3
      - name: northward_wind
        channels: 1, 3
      - name: ambwind_probability
        channels: 1, 3
      where:
      - variable:
          name: latitude@MetaData
        is_not_defined:
    - filter: VarObs Writer
      namelist_directory: ../etc/global/varobs
      general_mode: debug
      reject_obs_with_all_variables_failing_qc: true
    - filter: VarObs Checker
      expected_main_table_columns:
        # Only channels 1 and 3 are simulated and hence written to the VarObs file.
        # In the arrays below, rows denote locations and columns are the varobs channels are consecutive.
        field:    ["51","51","52","52","53","53",
                   "51","51","52","52","53","53",
                   "51","51","52","52","53","53"]
        level:    ["1","2","1","2","1","2",
                   "1","2","1","2","1","2",
                   "1","2","1","2","1","2"]
        ob value: ["91.10000","91.30000","101.10000","101.30000","61.10000","61.30000",
                   "93.10000","93.30000","103.10000","103.30000","63.10000","63.30000",
                   "94.10000","94.30000","104.10000","104.30000","64.10000","64.30000"]
        ob error: ["11.10000","11.30000","41.10000","41.30000","71.10000","71.30000",
                   "13.10000","13.30000","43.10000","43.30000","73.10000","73.30000",
                   "14.10000","14.30000","44.10000","44.30000","74.10000","74.30000"]
        # Note that PGE values for field 52 (v10ambwind) are copied from field 51 (u10ambwind).
        # PGE are packed by multiplying by 100000. Need to view nc4 file in full precision as 
        # 21.3 is actually stored as 21.2999992
        pge:      ["211000.00000","212990.00000","211000.00000","212990.00000","811000.00000","813000.00000",
                   "231000.00000","232990.00000","231000.00000","232990.00000","831000.00000","833000.00000",
                   "241000.00000","242990.00000","241000.00000","242990.00000","841000.00000","843000.00000"]
        lat:      ["7.10000","7.10000","7.10000","7.10000","7.10000","7.10000",
                   "7.30000","7.30000","7.30000","7.30000","7.30000","7.30000",
                   "7.40000","7.40000","7.40000","7.40000","7.40000","7.40000"]
        lon:      ["17.10000","17.10000","17.10000","17.10000","17.10000","17.10000",
                   "17.30000","17.30000","17.30000","17.30000","17.30000","17.30000",
                   "17.40000","17.40000","17.40000","17.40000","17.40000","17.40000"]
    HofX: ObsValue # just a placeholder -- not used, but needed to force calls to postFilter.
    benchmarkFlag: 1000 # just to keep the ObsFilters test happy
    flaggedBenchmark: 0    HofX: ObsValue # just a placeholder -- not used, but needed to force calls to postFilter.
    benchmarkFlag: 1000 # just to keep the ObsFilters test happy
    flaggedBenchmark: 0
